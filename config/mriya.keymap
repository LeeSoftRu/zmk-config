/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        layer1_combo {
            bindings = <&mo 1>;
            key-positions = <52 55>;
        };

        lang_eng_combo {
            bindings = <&kp F17>;
            key-positions = <51 42>;
        };

        lang_rus_combo {
            bindings = <&kp F18>;
            key-positions = <56 45>;
        };

        fc_to_v_combo {
            bindings = <&kp V>;
            key-positions = <41 42>;
        };

        lang_toggle_combo {
            bindings = <&kp F19>;
            key-positions = <51 56>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                                   &mo 4  &kp N1    &kp N2            &kp N3       &kp N4                &kp N5             &kp N6       &kp N7     &kp N8     &kp N9         &kp N0        &kp EQUAL
&mt LEFT_GUI LA(LC(TAB))         &kp ESC   &kp Q     &kp G             &kp M        &kp L                 &kp W              &kp B        &kp Y      &kp U      &kp V  &kp SEMICOLON    &kp BACKSPACE  &lt 4 RIGHT_GUI
                                 &kp TAB   &kp D     &kp S             &kp T        &kp N                 &kp R              &kp I        &kp A      &kp E      &kp O          &kp H        &kp ENTER
                          &kp LEFT_SHIFT   &kp Z     &kp X             &kp C        &kp F               &kp DOT              &kp J        &kp P      &kp K  &kp SLASH      &kp SLASH  &kp RIGHT_SHIFT
                                                  &kp LALT  &kp LEFT_CONTROL  &lt 2 SPACE  &mt LSHIFT BACKSPACE    &mt RSHFT ENTER  &lt 3 SPACE  &kp RCTRL   &kp RALT
            >;
        };

        layer_1 {
            bindings = <
        &trans  &kp F1  &kp F2                    &kp F3  &kp F4  &kp F5                     &kp F6            &kp F7                &kp F8                 &kp F9        &kp F10  &kp F12
&trans  &trans  &trans  &trans                    &trans  &trans  &trans          &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp SEMICOLON   &trans  &trans
        &trans  &kp N1  &kp N2  &mt KP_SUBTRACT NUMBER_3  &kp N4  &kp N5              &kp LC(SLASH)      &kp LS(SEMI)  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LS(MINUS)   &trans
        &trans  &kp N6  &kp N7      &mt KP_PLUS NUMBER_8  &kp N9  &kp N0    &kp LC(LS(KP_MULTIPLY))         &kp COMMA      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SLASH   &trans
                        &trans                    &trans  &trans  &trans                     &trans            &trans                &trans                 &trans
            >;
        };

        layer_2 {
            bindings = <
                           &trans            &kp F1            &kp F2        &kp F3         &kp F4            &kp F5                       &kp F6       &kp F7                 &kp F8     &kp F9        &kp F10  &kp F11
&trans                  &kp GRAVE     &kp LS(GRAVE)   &kp KP_MULTIPLY  &kp KP_SLASH   &kp LS(PIPE)  &kp LS(NUMBER_7)                        &kp Q    &kp RA(Y)              &kp RA(U)      &kp J      &kp COLON   &trans  &trans
        &mt LA(RIGHT_CONTROL) TAB         &kp GRAVE         &kp EQUAL     &kp MINUS    &kp LS(DOT)  &kp RS(NUMBER_4)                    &kp RA(I)    &kp RA(A)              &kp RA(E)      &none      &kp RA(H)   &trans
                           &trans  &kp LS(NUMBER_3)  &kp LS(NUMBER_1)   &kp KP_PLUS  &kp LS(COMMA)             &mo 1                        &sl 1        &kp Q                  &none  &kp COMMA  &kp RA(SLASH)   &trans
                                                               &trans        &trans          &none         &kp ENTER    &mt RIGHT_SHIFT BACKSPACE  &lt 1 ENTER  &mt RIGHT_CONTROL F18     &trans
            >;
        };

        layer_3 {
            bindings = <
        &trans     &kp F1           &kp F2         &kp F3           &kp F4                    &kp N5         &kp F6          &kp F7               &kp F8           &kp F9      &kp F10  &kp F11
&trans  &trans    &kp INS           &trans         &trans           &trans                    &trans    &kp PAGE_UP        &kp HOME         &kp UP_ARROW          &kp END  &kp KP_PLUS   &trans  &trans
        &trans     &trans  &kp LC(LS(TAB))         &trans  &kp LC(LA(TAB))                    &trans      &kp PG_DN  &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW       &trans   &trans
        &trans  &kp LC(Z)        &kp LC(X)      &kp LC(C)        &kp LC(V)                   &kp F13          &kp J         &kp INS  &kp RC(KP_NUMBER_5)          &kp DEL    &kp ENTER   &trans
                                    &trans  &mt LCTRL F17      &lt 1 SPACE  &mt LEFT_SHIFT BACKSPACE         &trans           &none               &trans           &trans
            >;
        };

        layer_4 {
            bindings = <
                                        &trans  &trans  &trans  &trans  &trans  &trans         &to 0       &to 3             &trans            &trans  &trans  &trans
&trans                         &kp PAUSE_BREAK  &trans  &trans  &trans  &trans  &trans    &kp C_NEXT  &kp C_STOP    &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &trans  &trans  &trans
        &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &trans  &trans  &trans  &trans  &trans    &kp C_PREV  &kp C_PREV  &kp C_VOLUME_DOWN        &kp C_NEXT  &trans  &trans
                                        &trans  &trans  &trans  &trans  &trans  &trans        &trans      &trans         &kp C_MUTE            &trans  &trans  &trans
                                                        &trans  &trans  &trans  &trans        &trans      &trans             &trans            &trans
            >;
        };

        adjust_layer {
            bindings = <
             &none         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none        &none
&none  &bootloader         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none  &bootloader  &none
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR
        &sys_reset         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none   &sys_reset
                                         &none        &trans         &none        &trans          &trans         &none        &trans         &none
            >;
        };

        raise_layer {
            bindings = <
                 &trans           &trans     &trans     &trans     &trans        &trans          &trans    &trans     &trans     &trans           &trans           &trans
&trans       &kp KP_NUM     &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP         &kp SLCK         &kp CAPS  &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS      &kp C_MUTE  &kp LEFT     &kp UP  &kp RIGHT          &kp INS  &mt RCTRL K_APP
                 &trans        &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_DOT    &kp C_VOL_DN   &kp END   &kp DOWN  &kp PG_DN  &kp PAUSE_BREAK           &trans
                                             &trans     &trans     &trans     &lt 5 RET       &lt 5 ESC    &trans     &trans     &trans
            >;
        };

        lower_layer {
            bindings = <
                &trans    &trans  &trans     &trans    &trans     &trans       &trans    &trans     &trans    &trans    &trans           &trans
&trans       &kp UNDER    &kp F1  &kp F2     &kp F3    &kp F4     &kp F5       &kp F6    &kp F7     &kp F8    &kp F9   &kp F10          &kp F11  &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL    &kp N1  &kp N2     &kp N3    &kp N4     &kp N5       &kp N6    &kp N7     &kp N8    &kp N9    &kp N0           &trans
                                  &trans  &lt 5 TAB    &trans     &trans       &trans    &trans  &lt 5 DEL    &trans
            >;
        };
    };
};
